{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Package",
  "description": "A Protobuf package which contains services and methods. Maybe originate from multiple schema/nfiles.",
  "type": "object",
  "properties": {
    "config": {
      "description": "Configuration of `protomd` and not part of the schema definition.",
      "$ref": "#/$defs/Config"
    },
    "name": {
      "description": "The package name.",
      "type": "string"
    },
    "services": {
      "description": "List of services defined in the package.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/Service"
      }
    }
  },
  "required": [
    "config",
    "name",
    "services"
  ],
  "$defs": {
    "Config": {
      "description": "Configuration for the protomd Protobuf Markdown generator.",
      "type": "object",
      "properties": {
        "frontmatter": {
          "description": "Optional frontmatter to place at the beginning of each generated file./n/nFor example, in Vitepress you can configure the outline level for the navigation sidebar by/nadding the following configuration as frontmatter:/n/nfrontmatter = /"outline: [2, 4]/"",
          "type": "string",
          "default": ""
        },
        "markdownlint": {
          "description": "Configuration for `markdownlint`.",
          "$ref": "#/$defs/Markdownlint",
          "default": {
            "disable": []
          }
        },
        "request_symbols": {
          "description": "Symbols used to define the gRPC method type in templates.",
          "$ref": "#/$defs/RequestSymbols",
          "default": {}
        }
      }
    },
    "Markdownlint": {
      "description": "Configuration for `markdownlint`.",
      "type": "object",
      "properties": {
        "disable": {
          "description": "List of rules to disable.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      }
    },
    "RequestSymbols": {
      "description": "Symbols used to define the gRPC method type in templates./n/nNote that these are always encapsulated in backticks to better highlight them in the/nresulting Markdown, therefore HTML.",
      "type": "object",
      "properties": {
        "unary": {
          "description": "Single request-response oneshot.",
          "type": [
            "string",
            "null"
          ]
        },
        "client_streaming": {
          "description": "Client-side streaming.",
          "type": [
            "string",
            "null"
          ]
        },
        "server_streaming": {
          "description": "Server-side streaming.",
          "type": [
            "string",
            "null"
          ]
        },
        "bidi_streaming": {
          "description": "Bidirectional (both client- and server-side) streaming.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Service": {
      "description": "A gRPC service as part of a package.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the gRPC service.",
          "type": "string"
        },
        "description": {
          "description": "Description of the gRPC service.",
          "type": "string"
        },
        "methods": {
          "description": "List of methods the service provides.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/Method"
          }
        },
        "deprecated": {
          "description": "Whether this service is marked deprecated.",
          "type": "boolean"
        },
        "file_deprecated": {
          "description": "Whether the file this service is defined in is marked deprecated.",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "description",
        "methods",
        "deprecated",
        "file_deprecated"
      ]
    },
    "Method": {
      "description": "A gRPC method as part of a service.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the method.",
          "type": "string"
        },
        "description": {
          "description": "Description of the method.",
          "type": "string"
        },
        "input": {
          "description": "Input method parameter to the method call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/Message"
          }
        },
        "output": {
          "description": "Output message parameter to the method call.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/Message"
          }
        },
        "client_streaming": {
          "description": "Whether this method uses client-side streaming.",
          "type": "boolean"
        },
        "server_streaming": {
          "description": "Whether this method uses server-side streaming.",
          "type": "boolean"
        },
        "deprecated": {
          "description": "Whether this method is marked deprecated.",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "description",
        "input",
        "output",
        "client_streaming",
        "server_streaming",
        "deprecated"
      ]
    },
    "Message": {
      "description": "A Protobuf message, referenced by a method as parameter or nested within.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the message.",
          "type": "string"
        },
        "proto": {
          "description": "Raw Protobuf schema definition.",
          "type": "string"
        },
        "deprecated": {
          "description": "Whether this message is marked deprecated.",
          "type": "boolean"
        }
      },
      "required": [
        "description",
        "proto",
        "deprecated"
      ]
    }
  }
}
